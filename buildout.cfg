# buildout.cfg file for Plone 4 development work
# - for production installations please use http://plone.org/download
# Each part has more information about its recipe on PyPi
# http://pypi.python.org/pypi 
# ... just reach by the recipe name
[buildout]

extends = 
    https://raw.github.com/reebalazs/buildout.javascript.yeoman/master/yeoman.cfg
    http://dist.plone.org/release/4.2.5/versions.cfg

extensions = mr.developer
auto-checkout = *

parts +=  
    instance
    zopepy
    i18ndude
    zopeskel
    test
    codeintel
    bower_modules


# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.2.5/
    http://dist.plone.org/thirdparty


# Reference any folders where you have Python egg source code under development here 
# e.g.: develop = src/my.package
# If you are using the mr.developer extension and have the source code in a 
# repository mr.developer will handle this automatically for you
develop =
    ./


# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8788
debug-mode = off
verbose-security = on
blob-storage = var/blobstorage

eggs =
    Plone
    Pillow
    plone_interact

# Some pre-Plone 3.3 packages may need you to register the package name here in 
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =
    plone_interact


# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${instance:eggs}

# create ZopeSkel command
[zopeskel]
unzip = true
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    ${instance:eggs}

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${instance:eggs}

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on format for this part
[sources]
# need github version from firebase-token-generator,
# as the release is broken with setuptools (README.md missing).
#firebase_token_generator = git https://github.com/firebase/firebase-token-generator-python.git
python-firebase = git git://github.com/mikexstudios/python-firebase.git


# You can specify your own additional Node scripts.
# Make sure to add dependencies to package.json as well.
#[buster_script]
#<= node_script
#script_name = buster

[versions]
